#! /bin/bash
set -e
trap 'echo error$ ' ERR

source $(dirname "$BASH_SOURCE")/color.sh

ESCAPE_SEQUENCE_START="$1"
ESCAPE_SEQUENCE_END="$2"

prompt_color() {
  color "$1" "$2" "$ESCAPE_SEQUENCE_START" "$ESCAPE_SEQUENCE_END"
}
print_stat() {
  if [[ "$3" != "0" ]]; then
    prompt_color "1;38;5;${2}m" "$1"
    if [[ "$3" != "1" || "$1" = "+" ]]; then
      prompt_color "38;5;${2}m" "$3"
    fi
  fi
}
if $(git status >/dev/null 2>/dev/null); then
  reference_commit="$(git rev-parse refs/remotes/origin/HEAD)"
  current_branch="$(git rev-parse --abbrev-ref HEAD)"
  upstream_commit="$(git rev-parse $current_branch@{upstream} 2>/dev/null || echo $reference_commit)"
  root="$(git rev-parse --show-toplevel)"
  repo="${root##*/}"
  path="${PWD:${#root}}"
  path=${path/#\//>}
  commit=$(git rev-parse HEAD | tr -d "\n")
  upstream_mergebase=$(git merge-base $upstream_commit $commit | tr -d "\n")
  upstream_mergecount=$(git rev-list ${upstream_mergebase}..${commit} --count | tr -d "\n")
  upstream_behind=$(git rev-list ${upstream_mergebase}..${upstream_commit} --count | tr -d "\n")
  #mergebase=$(git merge-base $reference_commit $commit | tr -d "\n")
  #mergecount=$(git rev-list ${mergebase}..${commit} --count | tr -d "\n")
  echo -ne "["
  prompt_color "32m" "$repo"
  echo -ne ":"
  prompt_color "38;5;45m" "$current_branch"
  print_stat "^" "45" "$upstream_behind"
  print_stat "*" "21" $(git branch -l | grep -v '^\*' | sed 's/^..//' | wc -l) # branches
  print_stat "*" "55" $(git stash list | wc -l | tr -d " \n") # stashes
  #branches=$(git show-ref | grep --color=never "^$commit" | sed "s#^[^ ]* ##" | grep -v --color=never "^refs/remotes/[^/]*/HEAD$" | sed "s#^refs/remotes/##" | sed "s#^refs/heads/##" | sed "s#^refs/tags/#tags/#" | grep -v "^${reference_branch}$" | sed "s/^/ /" | paste -sd ","  - | sed "s/^ //")
  #if [ -n "$branches" ]; then
  #  echo -ne " "
  #  prompt_color "38;5;45m" "($branches)"
  #fi
  echo -ne "]"
  echo -ne "$path"

  # commits from reference to pr base branch
  # commits from pr base branch to pr head
  # How far ahead is reference? PR base? upstream?

  print_stat "*" "142" "$upstream_mergecount" # commits from reference to HEAD
  print_stat "*" "202" $(git status --porcelain | grep '^[A-Z].' | wc -l) # modified files in index
  print_stat "*" "196" $(git status --porcelain | grep '^.[A-Z]' | wc -l) # modified files locally
  print_stat "*" "201" $(git status --porcelain | grep '^??' | wc -l) # new files

else
  echo -ne "$PWD";
fi
echo -ne '$ '
